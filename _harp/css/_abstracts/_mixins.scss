/**
 * Import font files in EOT, WOFF, and TTF format.
 * @param  {String} $file-name name of font file, minus extension
 */
@mixin font-src($file-name) {
  src: url('`#{$file-name}.eot`');
  src:
    url('`#{$file-name}.woff`') format('woff'),
    url('`#{$file-name}.ttf`') format('truetype');
}

/**
 * Applies the given $prop with $value for all nth-of-type
 * except first (if $prop affects the left) or last (if $prop affects the right).
 */
@mixin skip-end($prop, $value) {
  #{$prop}: $value;

  // If property applies to left, skip first-child, otherwise skip last-child.
  $child: if(
    str-index($prop, 'left'),
    'first-of-type',
    'last-of-type'
  );

  &:#{$child} {
    #{$prop}: 0;
  }
}

/// Responsive breakpoint handler
/// @param {String} $breakpoint - the semantic breakpoint, e.g. 'full-nav'
/// @requires $breakpoints
@mixin handle-breakpoint($breakpoint) {
  $lookup: map-get($breakpoints, $breakpoint);

  @if $lookup {
    $query: if(
      type-of($lookup) == 'string',
      unquote($lookup),
      inspect($lookup)
    );

    @media (min-width: $query) {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`, make sure it is defined in `$breakpoints`';
  }
}
